name: Create release and upload APK

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Decode keystore and create jks
        run: echo "${{ secrets.KEYSTORE_JKS_BASE64 }}" | base64 --decode > keystore.jks

      - name: Generate keystore.properties
        run: |
          cat <<EOF > keystore.properties
          storePassword:${{ secrets.KEYSTORE_STORE_PASSWORD }}
          keyPassword:${{ secrets.KEYSTORE_KEY_PASSWORD }}
          keyAlias:${{ secrets.KEYSTORE_KEY_ALIAS }}
          storeFile:${{github.workspace}}/${{ vars.KEYSTORE_STORE_FILE_PATH }}
          EOF

      - name: Generate file name env var
        run: |
          VERSION_NAME=${{ github.ref_name }}
          MESSAGE=$(cat << EOF
          BK_${VERSION_NAME}-release
          EOF
          )
          echo OUTPUT_NAME=$MESSAGE >> $GITHUB_ENV

      - name: Assemble
        run: ./gradlew assembleRelease --stacktrace

      - name: Rename APK
        run: |
          mv "./app/build/outputs/apk/release/app-release.apk" \
             "./app/build/outputs/apk/release/${{ env.OUTPUT_NAME }}.apk"

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}.apk
          path: app/build/outputs/apk/release/${{ env.OUTPUT_NAME }}.apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/${{ env.OUTPUT_NAME }}.apk
          asset_name: ${{ env.OUTPUT_NAME }}.apk
          asset_content_type: application/vnd.android.package-archive
